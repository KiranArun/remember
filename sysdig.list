# sysdig -c topprocs_net ## See the top processes in terms of network bandwidth usage
# sysdig -s2000 -X -c echo_fds fd.cip=192.168.0.1   ## See the top processes in terms of network bandwidth usage as binary:
# sysdig -s2000 -A -c echo_fds fd.cip=192.168.0.1 ## See the top processes in terms of network bandwidth usage as ASCII:
# sysdig -c fdcount_by fd.sport "evt.type=accept"   ## In terms of established connections:
# sysdig -c fdbytes_by fd.sport ## In terms of total bytes:
# sysdig -c fdcount_by fd.cip "evt.type=accept"   ## In terms of established connections
# sysdig -p"%proc.name %fd.name" "evt.type=accept and proc.name!=httpd" ## List all the incoming connections that are not served by apache.
# sudo csysdig -vcontainers ## View the list of containers running on the machine and their resource usage
# sudo csysdig -pc ## View the list of processes with container context
# sudo sysdig -pc -c topprocs_cpu container.name=wordpress1 ## View the CPU usage of the processes running inside the wordpress1 container
# sudo sysdig -pc -c topprocs_net container.name=wordpress1 ## View the network bandwidth usage of the processes running inside the wordpress1 container
# sudo sysdig -pc -c topprocs_net container.name=wordpress1 ## View the processes using most network bandwidth inside the wordpress1 container
# sudo sysdig -pc -c topfiles_bytes container.name=wordpress1 ## View the top files in terms of I/O bytes inside the wordpress1 container
# sudo sysdig -pc -c topconns container.name=wordpress1 ## View the top network connections inside the wordpress1 container
# sudo sysdig -pc -c spy_users container.name=wordpress1 ## Show all the interactive commands executed inside the wordpress1 container
# sudo sysdig -s 2000 -A -c echo_fds fd.port=80 and evt.buffer contains GET ## See all the GET HTTP requests made by the machine
# sudo sysdig -s 2000 -A -c echo_fds evt.buffer contains SELECT  ## See all the SQL select queries made by the machine
# sysdig -s 2000 -A -c echo_fds fd.sip=192.168.30.5 and proc.name=apache2 and evt.buffer contains SELECT ## See queries made via apache to an external MySQL server happening in real time
# sysdig -c topprocs_file ## See the top processes in terms of disk bandwidth usage
# sysdig -c fdcount_by proc.name "fd.type=file" ## List the processes that are using a high number of files
# sysdig -c topfiles_bytes ## See the top files in terms of read+write bytes
# sysdig -c topfiles_bytes proc.name=httpd ## Print the top files that apache has been reading from or writing to
# sysdig -p "%12user.name %6proc.pid %12proc.name %3fd.num %fd.typechar %fd.name" evt.type=open ## Basic opensnoop: snoop file opens as they occur
# sysdig -c fdbytes_by fd.directory "fd.type=file" ## See the top directories in terms of R+W disk activity
# sysdig -c fdbytes_by fd.filename "fd.directory=/tmp/" ## See the top files in terms of R+W disk activity in the /tmp directory
# sysdig -A -c echo_fds "fd.filename=passwd" ## Observe the I/O activity on all the files named 'passwd'
# sysdig -c fdbytes_by fd.type ## Display I/O activity by FD type
# sysdig -c topprocs_cpu ## See the top processes in terms of CPU usage
# sysdig -s4096 -A -c stdout proc.name=cat ## Observe the standard output of a process
# sysdig -c topfiles_time ## See the files where most time has been spent
# sysdig -c topfiles_time proc.name=httpd ## See the files where apache spent most time
# sysdig -c topprocs_errors ## See the top processes in terms of I/O errors
# sysdig -c topfiles_errors ## See the top files in terms of I/O errors
# sysdig fd.type=file and evt.failed=true ## See all the failed disk I/O calls
# sysdig "proc.name=httpd and evt.type=open and evt.failed=true" ## See all the failed file opens by httpd
# sysdig -c topscalls_time ## See the system calls where most time has been spent
# sysdig -c topscalls "evt.failed=true" ## See the top system calls returning errors
# sysdig -p "%12user.name %6proc.pid %12proc.name %3fd.num %fd.typechar %fd.name" evt.type=open and evt.failed=true ## snoop failed file opens as they occur
# sysdig -c fileslower 1 ## Print the file I/O calls that have a latency greater than 1ms:
# sysdig -p"%evt.arg.path" "evt.type=chdir and user.name=root" ## Show the directories that the user "root" visits
# sysdig -A -c echo_fds fd.name=/dev/ptmx and proc.name=sshd ## Observe ssh activity
# sysdig evt.type=open and fd.name contains /etc ## Show every file open that happens in /etc
# sysdig -r file.scap -c list_login_shells tar ## Show the ID of all the login shells that have launched the "tar" command
# sysdig -r trace.scap.gz -c spy_users proc.loginshellid=5459 ## Show all the commands executed by the login shell with the given ID
